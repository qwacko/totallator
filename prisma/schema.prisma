// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "metrics"]
  engineType      = "binary"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model AuthUser {
  id       String        @id @unique
  session  AuthSession[]
  Key      AuthKey[]
  username String?       @unique

  //User Settings
  name           String?
  dateFormat     String?
  currencyFormat String?
  firstMonthFY   Int     @default(1)
  darkMode       Boolean @default(false)
  admin          Boolean @default(false)

  //Relationships
  adminAccountGroupings AccountGrouping[] @relation("AdminUsers")
  viewAccountGroupings  AccountGrouping[] @relation("ViewUsers")

  @@map("auth_user")
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  user            AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}


model AccountGrouping {
  id    String @id @unique @default(cuid())
  title String

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Users
  adminUsers AuthUser[] @relation("AdminUsers")
  viewUsers  AuthUser[] @relation("ViewUsers")

  //Other Links 
  accounts       TransactionAccount[]
  journalEntries JournalEntry[]
  tags           Tag[]
  categories     Category[]
  bills          Bill[]
  budgets        Budget[]
}

enum PrismaStatusEnum {
  Active
  Disabled
  Deleted
}

enum PrismaAccountEnum {
  Income
  Expense
  Asset
  Liability
}

model TransactionAccount {
  id                   String            @id @unique @default(cuid())
  title                String
  type                 PrismaAccountEnum @default(Expense)
  isCash               Boolean           @default(true)
  isNetWorth           Boolean           @default(true)
  accountGroup         String?
  accountGroup2        String?
  accountGroup3        String?
  accountGroupCombined String?
  accountTitleCombined String?
  startDate            DateTime?
  endDate              DateTime?

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id String @id @unique @default(cuid())

  journalEntries JournalEntry[]
}

model JournalEntry {
  id          String   @id @unique @default(cuid())
  date        DateTime
  description String
  linked      Boolean  @default(true)
  reconciled  Boolean  @default(false)
  dataChecked Boolean  @default(false)
  complete    Boolean  @default(false)
  amount      Decimal  @default(0) @db.Decimal(40, 8)

  //Additional Date Information (used to help with data retrieval / grouping)
  yearMonthDay String @default("")
  yearWeek     String @default("")
  yearMonth    String @default("")
  yearQuarter  String @default("")
  year         String @default("")

  //Relationships
  account       TransactionAccount @relation(fields: [accountId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  accountId     String
  tag           Tag?               @relation(fields: [tagId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  tagId         String?
  category      Category?          @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  categoryId    String?
  bill          Bill?              @relation(fields: [billId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  billId        String?
  budget        Budget?            @relation(fields: [budgetId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  budgetId      String?
  transaction   Transaction        @relation(fields: [transactionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  transactionId String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accountGroupingId String

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index(accountId)
  @@index(accountGroupingId)
  @@index(date)
  @@index(tagId)
  @@index(categoryId)
  @@index(billId)
  @@index(budgetId)
  @@index(description)
  @@index(linked)
  @@index(reconciled)
  @@index(dataChecked)
  @@index(complete)
  @@index(amount)
}

model Tag {
  id     String @id @unique @default(cuid())
  title  String
  group  String
  single String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id     String @id @unique @default(cuid())
  title  String
  group  String
  single String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bill {
  id    String @id @unique @default(cuid())
  title String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Budget {
  id    String @id @unique @default(cuid())
  title String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
