// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions", "fullTextSearch", "metrics"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id                    String            @id @unique @default(uuid())
  identifier_token      String            @unique
  hashed_password       String?
  email                 String            @unique
  firstName             String
  lastName              String
  admin                 Boolean
  dateFormat            String
  darkMode              Boolean
  settings              Json?
  RefreshToken          RefreshToken[]
  adminAccountGroupings AccountGrouping[] @relation("AdminUsers")
  viewAccountGroupings  AccountGrouping[] @relation("ViewUsers")

  @@map("user")
}

model RefreshToken {
  id            Int    @id @unique @default(autoincrement())
  refresh_token String @unique
  user          User   @relation(references: [id], fields: [user_id], onDelete: Cascade)
  user_id       String

  @@index([user_id])
  @@map("refresh_token")
}

model AccountGrouping {
  id    String @id @unique @default(uuid())
  title String

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Users
  adminUsers User[] @relation("AdminUsers")
  viewUsers  User[] @relation("ViewUsers")

  //Other Links 
  accounts       Account[]
  journalEntries JournalEntry[]
  tags           Tag[]
  categories     Category[]
  bills          Bill[]
  budgets        Budget[]
}

enum PrismaStatusEnum {
  Active
  Disabled
  Deleted
}

enum PrismaAccountEnum {
  Income
  Expense
  Asset
  Liability
}

model Account {
  id                   String            @id @unique @default(uuid())
  title                String
  type                 PrismaAccountEnum @default(Expense)
  isCash               Boolean           @default(true)
  isNetWorth           Boolean           @default(true)
  accountGroup         String?
  accountGroup2        String?
  accountGroup3        String?
  accountGroupCombined String?
  accountTitleCombined String?
  startDate            DateTime?
  endDate              DateTime?

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JournalEntry {
  id          String   @id @unique @default(uuid())
  date        DateTime
  description String
  linked      Boolean  @default(true)
  reconciled  Boolean  @default(false)
  dataChecked Boolean  @default(false)
  complete    Boolean  @default(false)
  amount      Float    @default(0)

  //Relationships
  account    Account   @relation(fields: [accountId], references: [id])
  accountId  String
  tag        Tag?      @relation(fields: [tagId], references: [id])
  tagId      String?
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?
  bill       Bill?     @relation(fields: [billId], references: [id])
  billId     String?
  budget     Budget?   @relation(fields: [budgetId], references: [id])
  budgetId   String?

  //Primary Relationship
  primaryJournal   JournalEntry   @relation(name: "primaryJE", fields: [primaryJournalId], references: [id])
  primaryJournalId String
  journalEntries   JournalEntry[] @relation(name: "primaryJE")

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id     String @id @unique @default(uuid())
  title  String
  group  String
  single String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id     String @id @unique @default(uuid())
  title  String
  group  String
  single String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bill {
  id    String @id @unique @default(uuid())
  title String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Budget {
  id    String @id @unique @default(uuid())
  title String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
