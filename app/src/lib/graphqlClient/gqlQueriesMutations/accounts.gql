fragment accountReturn on Account {
	id
	title
	isCash
	isNetWorth
	type
	accountGroup
	accountGroup2
	accountGroup3
	accountGroupCombined
	startDate
	endDate
	accountGrouping {
		id
		title
		status
		allowUpdate
		userIsAdmin
	}
	status
	deleted
	active
	disabled
	allowUpdate
	createdAt
	updatedAt
	userIsAdmin
}

query getAccounts($filter: AccountFilter, $offset: Int, $limit: Int, $sort: [AccountSort!]) {
	accounts(filter: $filter, offset: $offset, limit: $limit, sort: $sort) {
		count
		accounts {
			...accountReturn
		}
	}
}

query accountsDropdown($search: String!, $accountGrouping: UUID!) {
	accounts(
		filter: {
			accountTitleCombined: { contains: $search }
			accountGroupingId: { equals: $accountGrouping }
		}
		sort: [{ accountTitleCombined: asc }]
		limit: 10
	) {
		accounts {
			id
			accountTitleCombined
			title
			type
		}
	}
}

query accountsDropdownAll($filter: AccountFilter) {
	accounts(filter: $filter, sort: [{ accountTitleCombined: asc }], limit: 10) {
		accounts {
			id
			accountTitleCombined
			title
			type
		}
	}
}

mutation createAccount($input: CreateAccountInput!) {
	createAccount(input: $input) {
		...accountReturn
	}
}

mutation updateAccount($id: String!, $input: UpdateAccountInput!) {
	updateAccounts(filter: { id: { equals: $id } }, input: $input) {
		...accountReturn
	}
}
