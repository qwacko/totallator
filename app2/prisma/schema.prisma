// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  //User Account Information
  id            String    @id @default(cuid())
  username      String    @unique
  email         String?   @unique
  admin         Boolean   @default(false)
  passwordHash  String?
  emailVerified DateTime?
  image         String?

  //User Settings
  name           String?
  dateFormat     String?
  currencyFormat String?
  firstMonthFY   Int     @default(1)
  darkMode       Boolean @default(false)

  //Relationships
  accounts              Account[]
  sessions              Session[]
  adminAccountGroupings AccountGrouping[] @relation("AdminUsers")
  viewAccountGroupings  AccountGrouping[] @relation("ViewUsers")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model AccountGrouping {
  id    String @id @unique @default(uuid())
  title String

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Users
  adminUsers User[] @relation("AdminUsers")
  viewUsers  User[] @relation("ViewUsers")

  //Other Links 
  accounts       TransactionAccount[]
  journalEntries JournalEntry[]
  tags           Tag[]
  categories     Category[]
  bills          Bill[]
  budgets        Budget[]
}

enum PrismaStatusEnum {
  Active
  Disabled
  Deleted
}

enum PrismaAccountEnum {
  Income
  Expense
  Asset
  Liability
}

model TransactionAccount {
  id                   String            @id @unique @default(uuid())
  title                String
  type                 PrismaAccountEnum @default(Expense)
  isCash               Boolean           @default(true)
  isNetWorth           Boolean           @default(true)
  accountGroup         String?
  accountGroup2        String?
  accountGroup3        String?
  accountGroupCombined String?
  accountTitleCombined String?
  startDate            DateTime?
  endDate              DateTime?

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JournalEntry {
  id          String   @id @unique @default(uuid())
  date        DateTime
  description String
  linked      Boolean  @default(true)
  reconciled  Boolean  @default(false)
  dataChecked Boolean  @default(false)
  complete    Boolean  @default(false)
  amount      Float    @default(0)

  //Relationships
  account    TransactionAccount @relation(fields: [accountId], references: [id])
  accountId  String
  tag        Tag?               @relation(fields: [tagId], references: [id])
  tagId      String?
  category   Category?          @relation(fields: [categoryId], references: [id])
  categoryId String?
  bill       Bill?              @relation(fields: [billId], references: [id])
  billId     String?
  budget     Budget?            @relation(fields: [budgetId], references: [id])
  budgetId   String?

  //Primary Relationship
  primaryJournal   JournalEntry   @relation(name: "primaryJE", fields: [primaryJournalId], references: [id])
  primaryJournalId String
  journalEntries   JournalEntry[] @relation(name: "primaryJE")

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id     String @id @unique @default(uuid())
  title  String
  group  String
  single String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id     String @id @unique @default(uuid())
  title  String
  group  String
  single String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bill {
  id    String @id @unique @default(uuid())
  title String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Budget {
  id    String @id @unique @default(uuid())
  title String

  //Account Grouping
  accountGrouping   AccountGrouping @relation(fields: [accountGroupingId], references: [id])
  accountGroupingId String

  //Journals
  journalEntries JournalEntry[]

  //BasicStatus
  status      PrismaStatusEnum @default(Active)
  deleted     Boolean          @default(false)
  active      Boolean          @default(true)
  disabled    Boolean          @default(false)
  allowUpdate Boolean          @default(true)

  //Timing Information
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
