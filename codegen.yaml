schema: [
    './src/lib/server/graphqlServer/graphql/*.ts',
    './src/lib/server/graphqlServer/graphqlScalars/*.graphql'
  ] # Or schema: ./src/schema.graphql
documents: './src/**/*.gql'
generates:
  ./src/lib/graphqlClient/generated.ts:
    plugins:
      - typescript
      - typescript-operations
      - typed-document-node

  ./src/lib/server/graphqlServer/types/generated-resolvers.ts:
    plugins:
      - typescript
      - typescript-resolvers
    config:
      mappers:
        JournalEntry: ./src/lib/server/graphqlServer/types/models#JournalEntryModel
        Account: ./src/lib/server/graphqlServer/types/models#AccountModel
        AccountGrouping: ./src/lib/server/graphqlServer/types/models#AccountGroupingModel
        Bill: ./src/lib/server/graphqlServer/types/models#BillModel
        Budget: ./src/lib/server/graphqlServer/types/models#BudgetModel
        Category: ./src/lib/server/graphqlServer/types/models#CategoryModel
        Tag: ./src/lib/server/graphqlServer/types/models#TagModel
      enumsAsTypes: true

  ./src/lib/server/graphqlServer/graphql/combinedSchema.graphql:
    plugins:
      - schema-ast
